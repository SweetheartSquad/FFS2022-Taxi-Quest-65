::start
<<if !this.started>>
<<do
	// add `this.gotod(passage, delay)`
	this.gotoo = this.goto;
	this.goto = (passage) => {
		window.clearTimeout(this.auto);
		this.auto = 0;
		return this.gotoo(passage);
	};
	this.gotod = (passage, delay) => {
		window.clearTimeout(this.auto);
		this.auto = window.setTimeout(() => {
			this.goto(passage);
		}, delay);
	};

	this.car = this.Model('taxi', 'palette', { doubleSided: true, depth: true });
	this.clock = this.Model('clock', 'palette', { doubleSided: true, depth: true });
	this.clock.model.visible = false;
	this.car.model.getChildByName('passengerRef').visible = false;
	
	this.chimneys = this.Model('chimneys', 'palette', { doubleSided: true, depth: true });

	// camera
	this.scene.camera3d.position = this.car.model.getChildByName('Camera').position;
	const camProps = window.game.app.loader.resources.taxi.gltf.descriptor.cameras[0].perspective;
	this.scene.camera3d.fieldOfView = camProps.yfov * 100;
	this.scene.camera3d.near = camProps.znear;
	this.scene.camera3d.far = camProps.zfar;

	// road + sway
	const wheel = scene.strand.car.model.getChildByName('steeringColumn');
	const roadSize = 60 * 0.990306;
	const roadSegments = Math.max(2, Math.ceil(this.scene.camera3d.far*2 / roadSize));
	console.log(roadSegments);
	this.roadSpeed = 40;
	let rootRoad;
	for(let i = 0; i < roadSegments; ++i) {
		const pos = i-roadSegments/2;
		const road = this.Model('roadSeg1', 'palette', { doubleSided: true, depth: true });
		if (i === 0) {
			rootRoad = road;
		} else {
			rootRoad.model.addChild(road.model);
			road.model.position.z = i * roadSize;
		}
	}
	rootRoad.model.position.y -= 1.36;
	rootRoad.model.position.x -= 3.3;
	const xRoot = rootRoad.model.position.x;
	const yRoot = rootRoad.model.position.y;
	let pTime = Date.now();
	let curPos = 0;
	this.Updater(() => {
		const cTime = Date.now();
		const dTime = cTime - pTime;
		curPos += dTime/1000 * this.roadSpeed;
		curPos %= roadSize;
		rootRoad.model.position.z = curPos - (roadSize*roadSegments/2);

		// rotate wheel + sway road back and forth
		const sway = Math.sin(Date.now()/2300)*2 + Math.sin(Date.now()/3200)*4;
		wheel.rotationQuaternion.setEulerAngles(65, 0, sway);
		rootRoad.model.position.x = xRoot + sway * 0.1 * Math.min(1, this.roadSpeed/50);
		// bounce road
		rootRoad.model.position.y = yRoot + Math.sin(cTime/20) * 0.01;
		pTime = cTime;
	});

	// passenger
	this.passenger = this.Model('taxi', 'passenger_normal', { transparent: true });
	this.passenger.model.children.forEach(i => i.visible = false);
	const passengerRef = this.passenger.model.getChildByName('passengerRef');
	passengerRef.visible = true;
	this.scene.pointDialogue.position.x = passengerRef.position.x + 0.15;
	this.scene.pointDialogue.position.y = passengerRef.position.y + 0.35;
	this.scene.pointDialogue.position.z = passengerRef.position.z;

	this.InteractionRegion({
		x: -42,
		y: 12,
		range: 10,
		label: 'crank',
		action: () => {
			this.radio = !this.radio;
			this.sfx('click', { rate: Math.random()*0.2 + 0.9 });
			if (this.radio) {
				this.music('');
				this.clock.model.visible = false;
			} else {
				this.music('bgm');
				this.clock.model.visible = true;
			}
			console.log('radio!');
		},
	});

	const rearView = scene.strand.car.model.getChildByName('rearView');
	this.InteractionRegion({
		x: -49,
		y: -15,
		range: 5,
		label: 'adjust',
		action: () => {
			this.sfx('click', { rate: Math.random()*0.2 + 0.9 });
			rearView.rotationQuaternion.setEulerAngles(0, Math.random()*40-30, 0);
		},
	});

	const sideMirror = scene.strand.car.model.getChildByName('sideMirror');
	this.InteractionRegion({
		x: 34,
		y: 3,
		range: 5,
		label: 'adjust',
		action: () => {
			this.sfx('click', { rate: Math.random()*0.2 + 0.9 });
			sideMirror.rotationQuaternion.setEulerAngles(0, Math.random()*30+10, 0);
		},
	});

	const sunBlind = scene.strand.car.model.getChildByName('sunBlind1');
	let sunBlindOpen = false;
	this.InteractionRegion({
		x: -7,
		y: -35,
		range: 10,
		label: 'flip',
		action: () => {
			this.sfx('click', { rate: Math.random()*0.2 + 0.9 });
			sunBlind.rotationQuaternion.setEulerAngles(sunBlindOpen ? 0 : 90, 0, 0);
			sunBlindOpen = !sunBlindOpen;
		},
	});


	this.EnvModel = () => {
		const m = this.Model('taxicab_shell', 'palette');
		m.model.position.z = 100;
		const t = this.tween(m.model.position, 'z', -100, 10000);
		setTimeout(() => {
			this.tweenAbort(t);
			this.destroy(m);
		}, 10000);
	};

	// pose helper
	const poses = {
		':(': 'sad',
		':)': 'normal',
	};
	this.setPose = (pose, state) => {
		this.pose = poses[pose] || pose;
		const frame = this.passenger.animator.frame;
		const offset = this.passenger.animator.offset;
		this.passenger.setAnimation(['passenger', this.pose, state].filter(i => i).join('_'));
		this.passenger.animator.frame = frame;
		this.passenger.animator.offset = offset;
		this.passenger.animator.updateTexture();
	};


	// blinking and lip flaps
	this.pose = 'normal';
	this.blinking = false;
	this.timeoutBlinking;
	this.scene.dialogue.scripts.push({
		gameObject: this.scene.dialogue,
		update: () => {
			if (!this.pose) return;
			if (!this.timeoutBlinking) {
				this.timeoutBlinking = setTimeout(() => {
					this.blinking = !this.blinking;
					this.timeoutBlinking = null;
				}, this.blinking ? 100 : 2000+Math.random()*4000);
			};

			const letter = this.scene.dialogue.strText[scene.dialogue.pos];
			const isLetter = letter && letter.replace(/[^\w]/, '');
			if (isLetter) {
				this.setPose(this.pose, 'o');
			} else if (this.blinking) {
				this.setPose(this.pose, 'b');
			} else {
				this.setPose(this.pose, 'n');
			}
		},
	});

	// add syntax sugar for poses like `:( - Blah blah`
	const check = /^(.*) - /;
	this.scene.dialogue.sayo = this.scene.dialogue.say;
	this.scene.dialogue.say = (text, actions) => {
		const match = check.exec(text);
		if (match) {
			this.setPose(match[1]);
			return this.scene.dialogue.sayo(text.substring(match[0].length), actions);
		} else {
			return this.scene.dialogue.sayo(text, actions);
		}
	};

	// start
	this.started=true;
	requestAnimationFrame(() => {
		this.scrim(1, 3000);
		this.scenarios = this.shuffle(Object.keys(this.passages).filter(i => i.startsWith('scenario-')));
		this.scenarios.unshift('end-scenario');
		this.radio = true;
		this.goto('main');
	});
>>
<<endif>>

::close
this should never render

::debug menu
debug menu

[[passage select>passage select]]
[[close]]
[[get interaction region|console.log(this.scene.x, this.scene.y)]]
[[back|this.back()]]

::main
<<do this.scrim(0)>>
// <<do this.goto('close');this.gotod(this.scenarios.pop(), (Math.random()*10+12)*1000);>>
<<do this.goto('close');this.gotod(this.scenarios.pop(), 2000);>>

::end-scenario
Ok. This is my stop.
>
Thanks for the ride.
>
So long.
>
<<do
	this.scrim(1, 1);
	this.tween(this.scene.dialogue.display.container, 'alpha', 0, 1);
	this.tween(scene.camera.display.container, 'alpha', 0, 1);
	this.tween(scene.container3d, 'alpha', 0, 1);
	this.music('', { fade: 5000 });
>>














// ███████  ██████ ███████ ███    ██  █████  ██████  ██  ██████  ███████
// ██      ██      ██      ████   ██ ██   ██ ██   ██ ██ ██    ██ ██     
// ███████ ██      █████   ██ ██  ██ ███████ ██████  ██ ██    ██ ███████
//      ██ ██      ██      ██  ██ ██ ██   ██ ██   ██ ██ ██    ██      ██
// ███████  ██████ ███████ ██   ████ ██   ██ ██   ██ ██  ██████  ███████

::scenario-busy
Been a busy night?
>Yeah|Nah
Guess a lot of people have been trying to leave the city.
>
My mom's been nagging me for the past year.
>
Going on about how dangerous it's gotten.
>
Thought she was just being annoying but it's gotten outta hand lately...
>
I uh, saw your rifle in the back...
>
Is that for hunting out here?
[[Yeah>busy-yes]]
[[Nah>busy-no]]

::busy-no
Oh...
>
Have you ever had to use it on the job?
[[Yeah>busy-no-yes]]
[[Nah>busy-no-no]]
[[...>busy-no-yes]]
[[Once>busy-no-yes]]

::busy-no-no
...Hm.
>
Well, probably for the best.
[[>main]]

::busy-no-yes
Oh.
>
Well, I won't ask.
[[>main]]

::busy-yes
Cool! I've never been hunting before.
>
So do you like, catch desert hares or something?
[[Yeah>hares]]
[[Nah>no-hares]]
[[...>Bigger game]]
[[Bigger game]]

::hares
Ah. Wonder if I'll have to start hunting back at home, ha ha.
>
Apparently they're having a hard time finding truckers to make the journey out. Supply chain's out of wack or something.
>
Never seen the stores so empty...
>
Wonder how long all this will last for.
[[>main]]

::no-hares
No? I thought they were common out here...
>
Though... come to think of it, I guess I haven't seen any.
>
Wonder where they all went...
[[>main]]

::Bigger game
Deer, then?
>
I hear there are some deer in this desert.
>
Never seen one, though.
>
...
>
I don't think I could shoot a deer.
>
Probably not a hare either, heh.
>
In fact, I think continuing to live my life in a way that does not involve me shooting things would be best.
>
Just in general.
[[>main]]

::scenario-two-seater
So... a two seater huh?
>
Haven't seen many taxis like that, ha ha.
>
Some more supply issues? Not enough yellow cabs to go 'round?
[[Yeah>two-seater-yeah]]
[[Nah>two-seater-nah]]

::two-seater-nah
Oh, just dealer's choice then?
>
It is kinda cozy.
[[>two-seater-yeah]]

::two-seater-yeah
Must be a pain if you get flagged down by a family of four.
>
Guess you could stick the kids in the trunk, ha ha.
[[Yeah>two-seater-2]]
[[Nah>two-seater-2]]
[[...>two-seater-2]]
[[Not many families around]]

::two-seater-2
TODO
[[>main]]

::Not many families around
Oh...
>
Guess that makes things simpler then.
[[>main]]


::scenario-out-of-town
Guessing most people from the city have been going out of town recently huh?
>Yeah|Nah
Must be nice, lot less hectic out here.
>
...
>
Does it feel weird?
>
I mean, when all day, you're just watching people leave?
[[Yeah>town-yeah]]
[[Nah>town-nah]]
[[...>town-yeah]]

::town-nah
Hmm, s'pose it's less strange if you're always coming and going yourself.
[[>town-yeah]]

::town-yeah
I appreciate the late night trip by the way.
>
Had to leave in a bit of a hurry.
[[>main]]

::scenario-love
You ever been in love?
>
I mean- Sorry, that's a weird question, isn't it?
[[Yeah>awkward]]
[[Nah>okay]]

::awkward
Gahhh sorry, I'm really sorry.
>
I just... It's a long trip, you know? It's a lot of waiting.
>
I don't like waiting. Especially in silence.
>
But you gotta have ice-breakers. Conversation starters.
>
I met a guy once, and that was the first thing he asked me.
>
"You ever been in love?"
>
He asked it like he knew the answer.
>
Like he could look right past me and see it floating above my head.
>
It was... really scary, to be honest. But also kind of cool?
>
...
>
Sorry, I'll drop it.
[[>main]]

::okay
You sure? You can say if it's not, I know I kind of sprang that out of nowhere... It's really okay?
[[Yeah>okay2]]
[[Nah>awkward]]

::okay2
Okay. Yeah? Okay!
>
Cool.
>
So...
>
Have you?
>
Ever been in love, that is?
[[Yeah>love]]
[[Nah>no-love]]

::love
Huh.
>
...
>
Would you recommend it?
>Yeah|Nah
Okay.
>
I'll keep that in mind.
[[>main]]

::no-love
Oh.
>
That's a shame.
>
I mean- I wouldn't know. But still...
>
Kinda feels like we've missed the bus on it sometimes.
>
...Heh.
>
You know, when I miss a bus, I usually call a cab.
>
...
>
Sorry, I'll drop it.
[[>main]]

::scenario-speed
We're going pretty fast, huh?
>
Guess they don't care much about speed limits out here.
>Yeah|Nah
Hard to imagine a cop pulling someone over for a traffic ticket these days.
>
Silver linings, heh.
[[>main]]


::scenario-there-yet
You know, I was just thinking...
>
It's a good thing we're not making this trip with like, a kid, or something.
>
Can you imagine? Just "are we there yet" "are we there yet" all the way there.
>
Nightmare.
>
Can't stand kids, honestly.
>
I know it's not their fault but it's just like... Grow up!
>
Ugh.
>
...You don't have kids, do you?
[[I do>kids]]
[[I don't>no-kids]]
[[...>oof-kids]]
[[I did>oof-kids]]

::kids
Oh. Well, you know, no offense.
>
I'm sure yours are nice. You seem like- well, you know. I'm sure they're nice.
>
Still, glad they're not here right now, ha ha.
>
...
>
Again, no offense. You know, it's just- you know.
>
Kids. Ugh.
[[>main]]

::no-kids
Yeah, that's what I thought.
>
You don't seem like the "having kids" type.
>
Takes one to know one, ha ha.
>
Who needs 'em.
>
"Are we there yet" "are we there yet" "are we there yet".
>
"No, now stow it you little brat!!"
>
That's what I'd say.
>
Ughhh.
[[>main]]

::oof-kids
...Sorry.
>
I, uh... I'll shut up now.
[[>main]]
